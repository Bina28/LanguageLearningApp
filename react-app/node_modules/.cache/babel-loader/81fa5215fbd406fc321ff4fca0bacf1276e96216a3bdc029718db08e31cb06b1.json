{"ast":null,"code":"import{useEffect,useState}from\"react\";import\"./UserCourses.css\";import{useLocation}from\"react-router-dom\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserCourses(){var _location$state;const location=useLocation();const userId=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.id;const[courses,setCourses]=useState([]);const navigate=useNavigate();useEffect(()=>{if(!userId){console.error(\"No user ID provided!\");return;}const fetchCourses=async()=>{try{const apiUrl=process.env.REACT_APP_API_URL;const response=await axios.get(\"\".concat(apiUrl,\"/api/usercourse/\").concat(userId));console.log(\"API Response:\",response.data);const courseData=Array.isArray(response.data)?response.data:[response.data];setCourses(courseData);}catch(error){console.error(\"Error fetching user courses:\",error);setCourses([]);}};fetchCourses();},[userId]);return/*#__PURE__*/_jsxs(\"div\",{className:\"table-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"course-title\",children:\"Course Progress Summary\"}),userId?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Course Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Attempts\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Completed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Completed Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:courses.map(course=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:course.courseTitle}),/*#__PURE__*/_jsx(\"td\",{children:course.courseDescription}),/*#__PURE__*/_jsx(\"td\",{children:course.attempts}),/*#__PURE__*/_jsx(\"td\",{children:course.isCompleted?\"✔️\":\"❌\"}),/*#__PURE__*/_jsx(\"td\",{children:course.lastCompletedDay?new Date(course.lastCompletedDay).toLocaleDateString():\"Not yet\"})]},\"\".concat(course.courseId,\"-\").concat(userId)))})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500\",children:\"No user data available.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate(\"/user\"),children:\"Go Back\"})]});}","map":{"version":3,"names":["useEffect","useState","useLocation","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","UserCourses","_location$state","location","userId","state","id","courses","setCourses","navigate","console","error","fetchCourses","apiUrl","process","env","REACT_APP_API_URL","response","get","concat","log","data","courseData","Array","isArray","className","children","map","course","courseTitle","courseDescription","attempts","isCompleted","lastCompletedDay","Date","toLocaleDateString","courseId","onClick"],"sources":["C:/Users/dyako/OneDrive/Skrivebord/StudyProjects/LanguageLearningApp/react-app/src/Components/UserCourses/UserCourses.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./UserCourses.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Course {\r\n  id: number;\r\n  courseId: number;\r\n  lastCompletedDay: string | null;\r\n  attempts: number;\r\n  isCompleted: boolean;\r\n  courseTitle: string;\r\n  courseDescription: string;\r\n}\r\n\r\nexport default function UserCourses() {\r\n  const location = useLocation();\r\n  const userId = location.state?.id;\r\n  const [courses, setCourses] = useState<Course[]>([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      console.error(\"No user ID provided!\");\r\n      return;\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const apiUrl = process.env.REACT_APP_API_URL;\r\n        const response = await axios.get(`${apiUrl}/api/usercourse/${userId}`);\r\n        \r\n        console.log(\"API Response:\", response.data);\r\n        \r\n        const courseData = Array.isArray(response.data) ? response.data : [response.data];\r\n        setCourses(courseData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user courses:\", error);\r\n        setCourses([]);\r\n      }\r\n    };\r\n\r\n    fetchCourses();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <h2 className=\"course-title\">Course Progress Summary</h2>\r\n      {userId ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Course Title</th>\r\n              <th>Description</th>\r\n              <th>Attempts</th>\r\n              <th>Completed</th>\r\n              <th>Last Completed Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {courses.map((course) => (\r\n              <tr key={`${course.courseId}-${userId}`}>\r\n                <td>{course.courseTitle}</td>\r\n                <td>{course.courseDescription}</td>\r\n                <td>{course.attempts}</td>\r\n                <td>{course.isCompleted ? \"✔️\" : \"❌\"}</td>\r\n                <td>{course.lastCompletedDay ? new Date(course.lastCompletedDay).toLocaleDateString() : \"Not yet\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"text-red-500\">No user data available.</p>\r\n      )}\r\n         <button className=\"back-button\" onClick={() => navigate(\"/user\")}>\r\n      Go Back\r\n    </button>\r\n    </div>\r\n  );\r\n  \r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}