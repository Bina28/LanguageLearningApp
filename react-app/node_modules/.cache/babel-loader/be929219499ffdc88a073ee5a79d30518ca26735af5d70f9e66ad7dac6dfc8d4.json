{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dyako\\\\OneDrive\\\\Skrivebord\\\\StudyProjects\\\\LanguageLearningApp\\\\react-app\\\\src\\\\Components\\\\EditUserForm\\\\EditUserForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./EditUserForm.css\"; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditUserForm({\n  id,\n  fullName,\n  email,\n  onUpdate,\n  onCancel\n}) {\n  _s();\n  const [name, setName] = useState(fullName);\n  const [userEmail, setUserEmail] = useState(email);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdate({\n      id,\n      fullName: name,\n      email: userEmail\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-user-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"edit-user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fullName\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          value: userEmail,\n          onChange: e => setUserEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 1\n  }, this);\n}\n_s(EditUserForm, \"SvODN054cjfU9pxDCRDUa4iV1Lo=\");\n_c = EditUserForm;\nvar _c;\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditUserForm","id","fullName","email","onUpdate","onCancel","_s","name","setName","userEmail","setUserEmail","handleSubmit","e","preventDefault","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dyako/OneDrive/Skrivebord/StudyProjects/LanguageLearningApp/react-app/src/Components/EditUserForm/EditUserForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./EditUserForm.css\"; // Assuming you have a CSS file for styling\r\n\r\ninterface EditUserFormProps {\r\n  id: number;\r\n  fullName: string;\r\n  email: string;\r\n  onUpdate: (updatedUser: { id: number; fullName: string; email: string }) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function EditUserForm({ id, fullName, email, onUpdate, onCancel }: EditUserFormProps) {\r\n  const [name, setName] = useState(fullName);\r\n  const [userEmail, setUserEmail] = useState(email);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onUpdate({ id, fullName: name, email: userEmail });\r\n  };\r\n\r\n  return (\r\n<div className=\"edit-user-container\">\r\n  <form onSubmit={handleSubmit} className=\"edit-user-form\">\r\n    <h2>Edit Profile</h2>\r\n    \r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"fullName\">Full Name</label>\r\n      <input\r\n        id=\"fullName\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        required\r\n      />\r\n    </div>\r\n    \r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input\r\n        id=\"email\"\r\n        type=\"email\"\r\n        value={userEmail}\r\n        onChange={(e) => setUserEmail(e.target.value)}\r\n        required\r\n      />\r\n    </div>\r\n    \r\n    <div className=\"btn-row\">\r\n      <button type=\"submit\">Save</button>\r\n      <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}